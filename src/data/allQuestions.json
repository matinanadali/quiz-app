[
    
    [],
    [],
    [],

[
    {
        "questionText" : "Έχω μία ερώτηση για την εργασία 0. Τι κάνω;",
        "answerOptions" : [
           { "answerText" : "Κατευθείαν ποστάρω στο Piazza με τίτλο: Ερώτηση", "isCorrect" : false},
           { "answerText" : "Στέλνω mail στον Αυγερινό", "isCorrect" : false},
           { "answerText" : "Αν δεν έχει απαντηθεί στο Piazza, ανοίγω θέμα με περιγραφικό τίτλο.", "isCorrect" : true},
           { "answerText" : "Έχει βγει εργασία;", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Πόσες διαφορετικές τιμές μπορεί να πάρει ένα byte με 8 bit;",
        "answerOptions" : [
           { "answerText" : "2", "isCorrect" : false},
           { "answerText" : "2^32", "isCorrect" : false},
           { "answerText" : "1KB", "isCorrect" : false},
           { "answerText" : "256", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Ποιο είναι ένα παράδειγμα κύριας μνήμης;",
        "answerOptions" : [
           { "answerText" : "Flass Drive", "isCorrect" : false},
           { "answerText" : "Σκληρός Δίσκος", "isCorrect" : false},
           { "answerText" : "Οπτικός Δίσκος", "isCorrect" : false},
           { "answerText" : "Μνήμη RAM", "isCorrect" : true}
        ] 
    } ,
    {
        "questionText" : "Ο αριθμός 0x55 στο δεκαδικό σύστημα είναι:",
        "answerOptions" : [
           { "answerText" : "85", "isCorrect" : true},
           { "answerText" : "76", "isCorrect" : false},
           { "answerText" : "65", "isCorrect" : false},
           { "answerText" : "55", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Με πόσα bytes αναπαρίσταται ο τύπος int στη μνήμη;",
        "answerOptions" : [
           { "answerText" : "2", "isCorrect" : false},
           { "answerText" : "4", "isCorrect" : false},
           { "answerText" : "8", "isCorrect" : false},
           { "answerText" : "Εξαρτάται", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Πόσους διαφορετικούς αριθμούς μπορώ να αναπαραστήσω με έναν uint64_t;",
        "answerOptions" : [
           { "answerText" : "2^64", "isCorrect" : true},
           { "answerText" : "4 δις", "isCorrect" : false},
           { "answerText" : "Όλους τους ακεραίους", "isCorrect" : false},
           { "answerText" : "Εξαρτάται", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Πόσο μεγάλος αριθμός είναι περίπου ο 2^64;",
        "answerOptions" : [
           { "answerText" : "10^10", "isCorrect" : false},
           { "answerText" : "10^20", "isCorrect" : true},
           { "answerText" : "10^30", "isCorrect" : false},
           { "answerText" : "42", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Όταν το Gagnam Style στο Youtube κόντευε τα 2 δις views, η Google άλλαξε τον τύπο των views. Τι τύπου ήταν αρχικά;",
        "answerOptions" : [
           { "answerText" : "char", "isCorrect" : false},
           { "answerText" : "double", "isCorrect" : false},
           { "answerText" : "int64_t", "isCorrect" : false},
           { "answerText" : "int", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Για έναν signed char που έχει τιμή 0xFF (συμπλήρωμα ως προς 2), ποια είναι η δεκαδική τιμή του;",
        "answerOptions" : [
           { "answerText" : "1", "isCorrect" : false},
           { "answerText" : "-1", "isCorrect" : true},
           { "answerText" : "256", "isCorrect" : false},
           { "answerText" : "0", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Αν προσθέσω δύο θετικούς αριθμούς τύπου unsigned int το αποτέλεσμα είναι πάντα θετικό;",
        "answerOptions" : [
           { "answerText" : "Ναι", "isCorrect" : true},
           { "answerText" : "Όχι", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Mπορώ να ορίσω μία συνάρτηση με όνομα int;",
        "answerOptions" : [
           { "answerText" : "Ναι", "isCorrect" : false},
           { "answerText" : "Όχι", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Εάν ο χαρακτήρας I έχει κωδικό ASCII 0x49 ποιος είναι ο κωδικός του J;",
        "answerOptions" : [
            { "answerText" : "0x50", "isCorrect" : false},
            { "answerText" : "0x48", "isCorrect" : false},
            { "answerText" : "0x4A", "isCorrect" : true},
            { "answerText" : "0x39", "isCorrect" : false}
        ] 
    }
],
[
    {
        "questionText" : "Έχουμε μία ερώτηση στο διάγωνισμα που ζητάει ακέραιο αποτέλεσμα και πρέπει να βάλω στην τύχη κάτι. Τι επιλέγω;",
        "answerOptions" : [
            { "answerText" : "3", "isCorrect" : false},
            { "answerText" : "16", "isCorrect" : false},
            { "answerText" : "42", "isCorrect" : true},
            { "answerText" : "128", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Ποιο είναι το αποτέλεσμα της πράξης 21 * 2.0;",
        "answerOptions" : [
            { "answerText" : "42", "isCorrect" : false},
            { "answerText" : "41.99999", "isCorrect" : false},
            { "answerText" : "42.0", "isCorrect" : true},
            { "answerText" : "23", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "int b = 6.67. Ποια είναι η τιμή του b μετά την ανάθεση;",
        "answerOptions" : [
            { "answerText" : "7", "isCorrect" : false},
            { "answerText" : "6.0", "isCorrect" : false},
            { "answerText" : "6", "isCorrect" : true},
            { "answerText" : "6.67", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Ποιο είναι το απότελεσμα του 100 / 50 / 2;",
        "answerOptions" : [
            { "answerText" : "100", "isCorrect" : false},
            { "answerText" : "1.0", "isCorrect" : false},
            { "answerText" : "4", "isCorrect" : false},
            { "answerText" : "1", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Με ποιον τρόπο ελέγχουμε αν ένας αριθμός x είναι άρτιος(ζυγός);",
        "answerOptions" : [
            { "answerText" : "x % 2 == 1", "isCorrect" : false},
            { "answerText" : "x & 1", "isCorrect" : false},
            { "answerText" : "x >> 1", "isCorrect" : false},
            { "answerText" : "x % 2 == 0", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Ποια είναι η αποτίμηση της λογικής παράστασης 42 || 0;",
        "answerOptions" : [
            { "answerText" : "42", "isCorrect" : false},
            { "answerText" : "0", "isCorrect" : false},
            { "answerText" : "43", "isCorrect" : false},
            { "answerText" : "1", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Τι θα τυπώσει το πρόγραμμα: int a = 40; printf(\"%d \", a++);printf(\"%d \", a++);",
        "answerOptions" : [
            { "answerText" : "40 42", "isCorrect" : true},
            { "answerText" : "41 42", "isCorrect" : false},
            { "answerText" : "40 41", "isCorrect" : false},
            { "answerText" : "Τίποτα από τα παραπάνω", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Ποιο από τα παρακάτω δεν είναι τελεστής στη C;",
        "answerOptions" : [
            { "answerText" : ">>=", "isCorrect" : false},
            { "answerText" : "*=", "isCorrect" : false},
            { "answerText" : "=>", "isCorrect" : true},
            { "answerText" : ">=", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Ποια είναι η τιμή της παράστασης 4 << 3;",
        "answerOptions" : [
            { "answerText" : "42", "isCorrect" : false},
            { "answerText" : "32", "isCorrect" : true},
            { "answerText" : "1", "isCorrect" : false},
            { "answerText" : "7", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Ερώτηση στη Facebook: Πώς ελέγχω ότι το σημαντίκοτερο bit ενός byte x είναι 1;",
        "answerOptions" : [
            { "answerText" : "x & 0x1", "isCorrect" : false},
            { "answerText" : "x | 1", "isCorrect" : false},
            { "answerText" : "x & 0x80", "isCorrect" : true},
            { "answerText" : "x | 256", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Ποια είναι η τιμή της παράστασης (9 / 10) ? (5 & 3) : (8 | 5);",
        "answerOptions" : [
            { "answerText" : "13", "isCorrect" : false},
            { "answerText" : "0.9", "isCorrect" : false},
            { "answerText" : "1", "isCorrect" : true},
            { "answerText" : "11", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Ποια είναι η τιμή της παράστασης (0xFA << 4 | 0xFA >> 4);",
        "answerOptions" : [
            { "answerText" : "0xFAF", "isCorrect" : true},
            { "answerText" : "0xAF", "isCorrect" : false},
            { "answerText" : "0xF4", "isCorrect" : false},
            { "answerText" : "0xFF", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Ποιoς από τους παρακάτω τελεστές έχει μεγαλύτερη προτεραιότητα;",
        "answerOptions" : [
            { "answerText" : "!", "isCorrect" : true},
            { "answerText" : "+", "isCorrect" : false},
            { "answerText" : "*", "isCorrect" : false},
            { "answerText" : "||", "isCorrect" : false}
        ] 
    }
], [
    {
        "questionText" : "To do-while και το while loop είναι το ίδιο πράγμα.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Όλες οι εντολές στη C τελειώνουν με semicolon(;).",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Το do-while loop έχει τη δομή ελέγχου που εικονίζεται στο διάγραμμα:",
        "questionImage" : "image2",
        "answerOptions" : [
            { "answerText" : "a", "isCorrect" : false},
            { "answerText" : "b", "isCorrect" : true},
            { "answerText" : "c", "isCorrect" : false},
            { "answerText" : "Κανένα από τα παραπάνω", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Η εντολή while(!42) printf(\"yes\n \"); θα τυπώσει yes:",
        "answerOptions" : [
            { "answerText" : "0 φορές", "isCorrect" : true},
            { "answerText" : "42 φορές", "isCorrect" : false},
            { "answerText" : "άπειρες φορές", "isCorrect" : false},
            { "answerText" : "δεν είναι έγκυρη στη C", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Το loop while(condition) statement; είναι ισοδύναμο με:",
        "answerOptions" : [
            { "answerText" : "for(condition;;statement);", "isCorrect" : false},
            { "answerText" : "for(;condition;statement);", "isCorrect" : false},
            { "answerText" : "for(;condition;)statement;", "isCorrect" : true},
            { "answerText" : "for(;;condition)statement;", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Τι θα τυπώσει το ακόλουθο πρόγραμμα: int x=42; if(x>42) printf(\"Hello\"); else printf(\"World\"); ",
        "answerOptions" : [
            { "answerText" : "Hello", "isCorrect" : false},
            { "answerText" : "World", "isCorrect" : true},
            { "answerText" : "HelloWorld", "isCorrect" : false},
            { "answerText" : "Hello World", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Για ποια τιμή θα τυπώσει Jackpot! το ακόλουθο πρόγραμμα:",
        "questionImage": "image3",
        "answerOptions" : [
            { "answerText" : "12", "isCorrect" : false},
            { "answerText" : "93", "isCorrect" : true},
            { "answerText" : "31", "isCorrect" : false},
            { "answerText" : "13", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Η εντολή if x == 42 printf(\"Hello world\"); είναι δεκτή στη C.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Πότε τελειώνει το loop: int i; for(i=0;; i++);",
        "answerOptions" : [
            { "answerText" : "Μετά από 2^32 επαναλήψεις", "isCorrect" : false},
            { "answerText" : "Όταν το i γίνει αρνητικό", "isCorrect" : false},
            { "answerText" : "Εξαρτάται από την αρχιτεκτονική του υπολογιστή", "isCorrect" : false},
            { "answerText" : "Όταν λιώσει η CPU", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Πόσες φορές θα τυπώσει hello world το ακόλουθο πρόγραμμα;",
        "questionImage": "image4",
        "answerOptions" : [
            { "answerText" : "100", "isCorrect" : false},
            { "answerText" : "200", "isCorrect" : false},
            { "answerText" : "10000", "isCorrect" : true},
            { "answerText" : "1000000", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Περσινό θέμα: Τι θα εκτυπωθεί από το ακόλουθο πρόγραμμα:",
        "questionImage": "image5",
        "answerOptions" : [
            { "answerText" : "Σχεδόν ακαριαία ένα @", "isCorrect" : false},
            { "answerText" : "Μετά από κάποια δευτερόλεπτα εκτέλεσης, ένα @", "isCorrect" : true},
            { "answerText" : "Θα εκτυπώνει συνεχώς @, επ' άπειρον", "isCorrect" : false},
            { "answerText" : "Τίποτα από τα παραπάνω", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Το loop int i; for(i = 0; i < 100; i+=2); θα εκτελεστεί:",
        "answerOptions" : [
            { "answerText" : "100 φορές", "isCorrect" : false},
            { "answerText" : "99 φορές", "isCorrect" : false},
            { "answerText" : "49 φορές", "isCorrect" : false},
            { "answerText" : "50 φορές", "isCorrect" : true}
        ] 
    }
], [],
[    {
        "questionText" : "Είναι καλή ιδέα να χρησιμοποιήσω goto στο τελικό διαγώνισμα.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Μόλις έγραψα το collatz.c και έκαν git add και μετά git push. Ξέχασα κάτι;",
        "answerOptions" : [
            { "answerText" : "git branch", "isCorrect" : false},
            { "answerText" : "git gut", "isCorrect" : false},
            { "answerText" : "git commit", "isCorrect" : true},
            { "answerText" : "Όχι, όλα καλά. Τι είναι το git?", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Οποιοδήποτε πρόγραμμα χρησιοποιεί switch μπορούμε να το μετατρέψουμε σε if-else και το αντίστροφο.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : true},
            { "answerText" : "Λάθος", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Η εντολή break είναι ο μόνος τρόπος να σταματήσουμε έναν βρόγχο.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Τι θα τυπωθεί από το ακόλουθο πρόγραμμα;",
        "questionImage" : "image1",
        "answerOptions" : [
            { "answerText" : "two", "isCorrect" :false},
            { "answerText" : "two three", "isCorrect" : false},
            { "answerText" : "two three default", "isCorrect" : false},
            { "answerText" : "Δεν είναι δεκτό στη C", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Τι θα τυπωθεί από το ακόλουθο πρόγραμμα;",
        "questionImage" : "image6",
        "answerOptions" : [
            { "answerText" : "two", "isCorrect" : false},
            { "answerText" : "two three", "isCorrect" : true},
            { "answerText" : "two three default", "isCorrect" : false},
            { "answerText" : "Δεν είναι δεκτό στη C", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Πόσες φορές θα τυπώσει Hello το ακόλουθο πρόγραμμα;",
        "questionImage" : "image7",
        "typeQuestion" : "80",
        "answerOptions" : [] 
    },
    {
        "questionText" : "Θα τελειώσει αυτό το loop: for (i=1;;i++) if (i==0) break;;",
        "answerOptions" : [
            { "answerText" : "Όχι, δεν τελειώνει καθώς δεν έχει συνθήκη τερματισμού", "isCorrect" : false},
            { "answerText" : "Ναι, όταν υπερχειλίσει ο ακέραιος", "isCorrect" : true},
            { "answerText" : "Όχι, δεν τελειώνει, καθώς ο ακέραιος i αρχικοποιείται στο 1 και μετά αυξάνεται", "isCorrect" : false},
            { "answerText" : "Μόνο όταν λιώσει η CPU", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Πόσες φορές θα εκτυπώσει Hello το παρακάτω πρόγραμμα;",
        "questionImage" : "image8",
        "answerOptions" : [
            { "answerText" : "10000", "isCorrect" : false},
            { "answerText" : "500", "isCorrect" :false},
            { "answerText" : "2000", "isCorrect" : false},
            { "answerText" : "8000", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Πόσες φορές θα εκτυπώσει Hello το παρακάτω πρόγραμμα;",
        "questionImage" : "image9",
        "answerOptions" : [
            { "answerText" : "0", "isCorrect" : false},
            { "answerText" : "400", "isCorrect" :true},
            { "answerText" : "2000", "isCorrect" : false},
            { "answerText" : "7800", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Θέλω να βρω τον μικρότερο τριψήφιο που έχει 1 στα bit 0(το μικρότερο) και 2: Προτιμώ να χρησιμοποιήσω:",
        "answerOptions" : [
            { "answerText" : "for(i=999;i>99;i--) if (i & 0x5) break; found = i;", "isCorrect" : true},
            { "answerText" : "for(i=100;i<1000;i++) if (i & 0x5) break; found = i;", "isCorrect" : false},
            { "answerText" : "for(i=999;i>99;i--) if (i | 0x5) break; found = i;", "isCorrect" : false},
            { "answerText" : "for(i=100;i<1000;i++) if (i | 0x5) break; found = i;", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Τι θα δούμε στην κονσόλα αν τρέξουμε  printf(\"Hello!\rWorld\n\")",
        "answerOptions" : [
            { "answerText" : "Hello", "isCorrect" : false},
            { "answerText" : "World", "isCorrect" : false},
            { "answerText" : "Hello! World", "isCorrect" : false},
            { "answerText" : "World!", "isCorrect" : true}
        ] 
    }
], [
    {
        "questionText" : "Το πρώτο στοιχείο ενός πίνακα με 10 στοιχεία βρίσκεται στη θέση (index):",
        "answerOptions" : [
            { "answerText" : "1", "isCorrect" : false},
            { "answerText" : "10", "isCorrect" : false},
            { "answerText" : "9", "isCorrect" : false},
            { "answerText" : "0", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Το τελευταίο στοιχείο ενός πίνακα με ορισμό int students[100] είναι:",
        "answerOptions" : [
            { "answerText" : "students[100]", "isCorrect" : false},
            { "answerText" : "students[99]", "isCorrect" : true},
            { "answerText" : "students[-1]", "isCorrect" : false},
            { "answerText" : "students[101]", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Ο πιο αποδοτικός τρόπος να αντιγράψω έναν πίνακα 100 στοιχείων είναι με ανάθεση: int a[100], b[100]; b = a.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Ένας πίνακας char str[128] πόσα bytes καταλαμβάνει στην μνήμη;",
        "answerOptions" : [
            { "answerText" : "128", "isCorrect" : true},
            { "answerText" : "255", "isCorrect" : false},
            { "answerText" : "511", "isCorrect" : false},
            { "answerText" : "1023", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Ένας πίνακας int numbers[128] πόσα bytes καταλαμβάνει στην μνήμη;",
        "answerOptions" : [
            { "answerText" : "1024", "isCorrect" : false},
            { "answerText" : "4096", "isCorrect" : false},
            { "answerText" : "8192", "isCorrect" : false},
            { "answerText" : "Εξαρτάται", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Αν ο πίνακας char array[100] ξεκινάει στη διεύθυνση 1000, σε ποια διεύθυνση βρίσκεται το στοιχείο array[42];",
        "answerOptions" : [
            { "answerText" : "1000", "isCorrect" : false},
            { "answerText" : "1042", "isCorrect" : true},
            { "answerText" : "1041", "isCorrect" : false},
            { "answerText" : "1043", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Αν ο πίνακας int numbers[200] με sizeof(int)=4 ξεκινάει στη διεύθυνση 1000, σε ποια διεύθυνση βρίσκεται το στοιχείο numbers[42];",
        "answerOptions" : [
            { "answerText" : "1042", "isCorrect" : false},
            { "answerText" : "1046", "isCorrect" : false},
            { "answerText" : "1842", "isCorrect" : false},
            { "answerText" : "1168", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Δεν υπάρχει πρόβλημα αν προσπελάσω στοιχεία εκτός των ορίων ενός πίνακα.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "char hello[] =\"Hello World\"; printf(\"%c\n\", hello[6])-Τι θα τυπώσει;",
        "answerOptions" : [
            { "answerText" : "Η", "isCorrect" : false},
            { "answerText" : "W", "isCorrect" : true},
            { "answerText" : "o", "isCorrect" : false},
            { "answerText" : "(κενό)", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "char hello[] =\"Hello World\"; printf(\"%d\n\", hello[11])-Τι θα τυπώσει;",
        "answerOptions" : [
            { "answerText" : "0", "isCorrect" : true},
            { "answerText" : "0x10", "isCorrect" : false},
            { "answerText" : "Θα πετάξει σφάλμα γιατί το hello[11] δεν είναι ακέραιος", "isCorrect" : false},
            { "answerText" : "Θα προκαλέσει segmantation fault γιατί είναι εκτός των ορίων του πίνακα", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Μπορούμε να αρχικόποιησουμε έναν πίνακα με 10 ακεραίους ως εξής: int numbers[10] = {0,1,2,3,4,5,6,7,8,9,10}",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Η συνάρτηση magic:",
        "questionImage" : "image10",
        "answerOptions" : [
            { "answerText" : "Υπολογίζει τον μέσο όρο 100 βαθμών", "isCorrect" : false},
            { "answerText" : "Υπολογίζει τη διασπορά 100 βαθμών", "isCorrect" : false},
            { "answerText" : "Είναι λάθος", "isCorrect" : true},
            { "answerText" : "Υπολογίζει το άθροισμα 100 βαθμών", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "int a[]={5,4,3,1,2,6}; printf(\"%d\n\", a[ a[2] ]); - Τι θα τυπώσει;",
        "answerOptions" : [
            { "answerText" : "1", "isCorrect" : true},
            { "answerText" : "4", "isCorrect" : false},
            { "answerText" : "3", "isCorrect" : false},
            { "answerText" : "6", "isCorrect" : false}
        ] 
    } 
], [
    {
        "questionText" : "Η διεύθυνση μίας μεταβλητής είναι πάντα ακέραιος αριθμός.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : true},
            { "answerText" : "Λάθος", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "int x=41; int *ptr=&x; x++; printf(\"%d\n\", *ptr); - Τι θα τυπώσει;",
        "answerOptions" : [
            { "answerText" : "41", "isCorrect" : false},
            { "answerText" : "42", "isCorrect" : true},
            { "answerText" : "43", "isCorrect" : false},
            { "answerText" : "Πού να ξέρω;", "isCorrect" : false}
        ] 
    },
    {
    "questionText" : "int x=41; int *ptr=&x; (*ptr)++; printf(\"%d\n\", *ptr); - Τι θα τυπώσει;",
    "answerOptions" : [
        { "answerText" : "41", "isCorrect" : false},
        { "answerText" : "42", "isCorrect" : true},
        { "answerText" : "43", "isCorrect" : false},
        { "answerText" : "Πού να ξέρω;", "isCorrect" : false}
    ] 
    },
    {
        "questionText" : "int x=41; int *ptr=&x; ptr++; printf(\"%d\n\", *ptr); - Τι θα τυπώσει;",
        "answerOptions" : [
            { "answerText" : "41", "isCorrect" : false},
            { "answerText" : "42", "isCorrect" : false},
            { "answerText" : "43", "isCorrect" : false},
            { "answerText" : "Πού να ξέρω;", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Η τιμή δείκτη NULL στα σημερινά συστήματα είναι ίση με 0.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : true},
            { "answerText" : "Λάθος", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Οι μεταβλητές double *x και char *c καταλαμβάνουν τον ίδιο χώρο στη μνήμη.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : true},
            { "answerText" : "Λάθος", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Η εντολή y = *&x; στη C είναι:",
        "answerOptions" : [
            { "answerText" : "Ισοδύναμη με την y = x;", "isCorrect" : true},
            { "answerText" : "Ισοδύναμη με την y = &*x;", "isCorrect" : false},
            { "answerText" : "Ισοδύναμη με την y = *x;", "isCorrect" : false},
            { "answerText" : "Συντακτικά λανθασμένη", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Έστω ότι η τιμή του int *ptr είναι 42. Η τιμή του δείκτη (ptr + 1) είναι:",
        "answerOptions" : [
            { "answerText" : "43", "isCorrect" : false},
            { "answerText" : "46", "isCorrect" : false},
            { "answerText" : "42", "isCorrect" : false},
            { "answerText" : "Εξαρτάται", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Έστω ότι sizeof(int) = 4 και η τιμή του int *ptr είναι 0x42. Η τιμή της έκφρασης ptr + 4 είναι:",
        "answerOptions" : [
            { "answerText" : "0x46", "isCorrect" : false},
            { "answerText" : "42", "isCorrect" : false},
            { "answerText" : "0x52", "isCorrect" : true},
            { "answerText" : "0x4C", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Έστω ότι sizeof(double) = 8 και η τιμή του double *ptr είναι 42. Μετά την εντολή ++ptr η τιμή του ptr είναι:",
        "answerOptions" : [
            { "answerText" : "42", "isCorrect" : false},
            { "answerText" : "46", "isCorrect" : false},
            { "answerText" : "43", "isCorrect" : false},
            { "answerText" : "50", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Η έκφραση (*ptr + 4) είναι ισοδύναμη με την έκφραση ptr[4].",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : true},
            { "answerText" : "Λάθος", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "int a[] = {10, 20, 30, 40}; int *ptr = &a[1]; printf(\"%d\n\", ptr[1]); - Θα τυπώσει: ",
        "typeQuestion" : "30",
        "answerOptions" : [] 
    },
    {
        "questionText" : "Μία μεταβλητή πίνακα συμπεριφέρται ακριβώς όπως ένας δείκτης.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Έστω int *p, *q είναι δύο δείκτες και ο καθένας έχει τιμή 42. Τότε η παράσταση p + q είναι:",
        "answerOptions" : [
            { "answerText" : "84", "isCorrect" : false},
            { "answerText" : "166", "isCorrect" : false},
            { "answerText" : "Δεν είναι δεκτή στη C", "isCorrect" : true},
            { "answerText" : "0", "isCorrect" : false}
        ] 
    }
], [
    {
        "questionText" : "Ο πίνακας double[2][2][2] είναι δισδιάστατος.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Ένας πίνακας int array[4][5] περιέχει πόσα int στοιχεία;",
        "answerOptions" : [
            { "answerText" : "20", "isCorrect" : true},
            { "answerText" : "12", "isCorrect" : false},
            { "answerText" : "80", "isCorrect" : false},
            { "answerText" : "Εξαρτάται", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Το στοιχείο της τελευταίας στήλης της τελευταίας γραμμής του πίνακα int array[100][200] είναι το:",
        "answerOptions" : [
            { "answerText" : "array[0][0]", "isCorrect" : false},
            { "answerText" : "array[100][200]", "isCorrect" : false},
            { "answerText" : "array[99]199]", "isCorrect" : true},
            { "answerText" : "array[199][99]", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Έστω sizeof(double) = 8 και ο πίνακας double coeffs[10][10] - Πόσο είναι το sizeof(coeffs);",
        "answerOptions" : [
            { "answerText" : "800", "isCorrect" : true},
            { "answerText" : "100", "isCorrect" : false},
            { "answerText" : "160", "isCorrect" : false},
            { "answerText" : "Εξαρτάται", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Η μεταβλητή char *argv[] είναι:",
        "answerOptions" : [
            { "answerText" : "Ένας δισδιάστατος πίνακας από χαρακτήρες", "isCorrect" : false},
            { "answerText" : "Ένας δείκτης σε πίνακα από χαρακτήρες", "isCorrect" : false},
            { "answerText" : "Ένας πίνακας από δείκτες σε χαρακτήρες", "isCorrect" : true},
            { "answerText" : "Εξαρτάται", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Έστω sizeof(char) = 1 και ο πίνακας char map[10][10] - Πόσο είναι το sizeof(map[5]);",
        "answerOptions" : [
            { "answerText" : "1", "isCorrect" : false},
            { "answerText" : "10", "isCorrect" : true},
            { "answerText" : "100", "isCorrect" : false},
            { "answerText" : "Εξαρτάται", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Έστω char *strings = {\"Hello\",\"fine\",\"world\", NULL}; Το στοιχείο string[1][2] είναι:",
        "answerOptions" : [
            { "answerText" : "'e'", "isCorrect" : false},
            { "answerText" : "NULL", "isCorrect" : false},
            { "answerText" : "'o'", "isCorrect" : false},
            { "answerText" : "'n'", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Δεν υπάρχει διαφορά ανάμεσα σε στατικούς και δυναμικούς πίνακες.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Έστω sizeof(int) = 4 και sizeof(*int) = 8. Τι θα τυπώσει το ακόλουθο πρόγραμμα; ",
        "questionImage" : "image11",
        "typeQuestion" : "8",
        "answerOptions" : [] 
    },
    {
        "questionText" : "Έστω ότι η διεύθυνση του int array[10][10] είναι 0 και sizeof(int) = 4. Η διεύθυνση του array[5][5] είναι: ",
        "answerOptions" : [
            { "answerText" : "220", "isCorrect" : true},
            { "answerText" : "45", "isCorrect" : false},
            { "answerText" : "55", "isCorrect" : false},
            { "answerText" : "Εξαρτάται", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Πόσα bytes στη μνήμη θα προσπαθήσει να δεσμεύσει η κλήση malloc(4 * sizeof(int));",
        "answerOptions" : [
            { "answerText" : "4", "isCorrect" : false},
            { "answerText" : "16", "isCorrect" : false},
            { "answerText" : "32", "isCorrect" : false},
            { "answerText" : "Εξαρτάται", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Έστω sizeof(double) = 8. Πόσα bytes στη μνήμη θα προσπαθήσει να δεσμεύσει η κλήση malloc(8 * sizeof(double)); ",
        "typeQuestion" : "64",
        "answerOptions" : [] 
    }
 
], [],
[
    {
        "questionText" : "Υπάρχουν μόνο δύο κατηγορίες μνήμης : η στοίβα και ο σωρός.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Για να βεβαιωθώ ότι ελευθέρωσα τη μνήμη στο σωρό τρέχω free δύο φορές.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Όταν αφαιρούμε ένα στοιχείο από μία στοίβα με πολλά στοιχεία, αυτό είναι:",
        "answerOptions" : [
            { "answerText" : "Πάντα το τελευταίο που βάλαμε στη στοίβα", "isCorrect" : true},
            { "answerText" : "Πάντα το πρώτο που βάλαμε στη στοίβα", "isCorrect" : false},
            { "answerText" : "Οποιοδήποτε στοιχείο της στοίβας", "isCorrect" : false},
            { "answerText" : "Το 42ο στη σειρά", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Όταν αποδεσμεύουμε τη μνήμη ενός στοιχείου από έναν σωρό, αυτό το στοιχείο είναι:",
        "answerOptions" : [
            { "answerText" : "Πάντα το τελευταίο που βάλαμε στο σωρό", "isCorrect" : false},
            { "answerText" : "Πάντα το πρώτο που βάλαμε στο σωρό", "isCorrect" : false},
            { "answerText" : "Οποιοδήποτε στοιχείο του σωρού", "isCorrect" : true},
            { "answerText" : "Το 42ο στη σειρά", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Τα στοιχεία του σωρού αποθηκεύονται σε μία συνεχόμενη περιοχή της μνήμης.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Έχω να δημιούργησω έναν μεγάλο πίνακα (10^6 στοιχεία) - Επιλέγω:",
        "answerOptions" : [
            { "answerText" : "Στοίβα", "isCorrect" : false},
            { "answerText" : "Σωρό", "isCorrect" : true},
            { "answerText" : "Στίβο", "isCorrect" : false},
            { "answerText" : "Να μειώσω τον αριθμό των στοιχείων", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Θέλω να αποθηκεύσω 10^9 double στοιχεία - Τι κάνω;",
        "answerOptions" : [
            { "answerText" : "int *array = malloc(1000000000);", "isCorrect" : false},
            { "answerText" : "double array[1000000000];", "isCorrect" : false},
            { "answerText" : "double *array = malloc(1000000000);", "isCorrect" : false},
            { "answerText" : "double *array = malloc(1000000000 * sizeof(double);", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Αποδεσμεύω μνήμη στη στοίβα με τη free.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Αλλάζω το μέγεθος της δεσμευμένης μνήμης στο σωρό με τη realloc.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : true},
            { "answerText" : "Λάθος", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Η calloc είναι σαν τη malloc απλά μηδενίζει όλα τα στοιχεία της μνήμης.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : true},
            { "answerText" : "Λάθος", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Η malloc μπορεί να σμικρύνει τη μνήμη στην οποία δείχνει ένας δείκτης.",
        "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Έστω ulimit -s = 8192 και το activation record της foo είναι 1024 bytes. Πόσες αναδρομικές κλήσεις μέχρι να σκάσει;",
        "answerOptions" : [
            { "answerText" : "~8", "isCorrect" : false},
            { "answerText" : "42", "isCorrect" : false},
            { "answerText" : "~400", "isCorrect" : false},
            { "answerText" : "~8000", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Θέλω να δημιουργήσω έναν πίνακα 5x5 - Αυτή η υλοποίηση είναι:",
        "questionImage" : "image12",
        "answerOptions" : [
            { "answerText" : "Σωστή", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Θέλω να δημιουργήσω έναν πίνακα 5x5 - Αυτή η υλοποίηση είναι:",
        "questionImage" : "image13",
        "answerOptions" : [
            { "answerText" : "Σωστή", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Θέλω να δημιουργήσω έναν πίνακα 5x5 - Αυτή η υλοποίηση είναι:",
        "questionImage" : "image14",
        "answerOptions" : [
            { "answerText" : "Σωστή", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Έχω 16ΚΒ ελεύθερη μνήμη και τρέχω malloc(8000) - Η κλήση αυτή σίγουρα θα πετύχει",
         "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    }
],[], [
    {
        "questionText" : "Για να ορίσω μία μακροεντολή (macro) χρησιμοποιώ την εντολή:",
        "answerOptions" : [
            { "answerText" : "#ifdef", "isCorrect" : false},
            { "answerText" : "#include", "isCorrect" : false},
            { "answerText" : "#define", "isCorrect" : true},
            { "answerText" : "#ifndef", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "H έξοδος του προεπεξεργαστή είναι ένα αρχείο:",
        "answerOptions" : [
            { "answerText" : "Δυαδικού κώδικα", "isCorrect" : false},
            { "answerText" : "Κώδικα assembly", "isCorrect" : false},
            { "answerText" : "Πηγαίου κώδικα", "isCorrect" : true},
            { "answerText" : "Εξαρτάται", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Τι θα τυπώσει το παρακάτω πρόγραμμα;",
         "answerOptions" : [],
         "typeQuestion" : "11",
         "questionImage" : "image15"
    },
    {
        "questionText" : "H συνάρτηση getchar() επιστρέφει δεδομένα τύπου:",
        "answerOptions" : [
            { "answerText" : "int", "isCorrect" :true},
            { "answerText" : "char", "isCorrect" : false},
            { "answerText" : "double", "isCorrect" : false},
            { "answerText" : "Εξαρτάται", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Ψάχνω έναν γνωστό μου σε αμφιθέατρο διαστάσεων n x n - ο αλγόριθμός μου είναι σε χρόνο:",
        "answerOptions" : [
            { "answerText" : "Ο(n)", "isCorrect" :false},
            { "answerText" : "O(sqrt(n))", "isCorrect" : false},
            { "answerText" : "O(n^2)", "isCorrect" : true},
            { "answerText" : "O(1)", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Μετράω τα ψηφία οποιουδήποτε αριθμού n μου δοθεί. Η χρονική πολυπλοκότητα του αλγορίθμου μου είναι:",
        "answerOptions" : [
            { "answerText" : "Ο(n)", "isCorrect" :false},
            { "answerText" : "O(sqrt(n))", "isCorrect" : false},
            { "answerText" : "O(n^2)", "isCorrect" : false},
            { "answerText" : "O(log(n))", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Ένας αλγόριθμος μπορεί να έχει πολυπλοκότητα Ο(n^2 + log(n)).",
         "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : true},
            { "answerText" : "Λάθος", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Ένας αλγόριθμος έχει χρονική πολυπλοκότητα Ο(n). Αυτό σημαίνει ότι χρειάζεται γραμμικό χρόνο:",
        "answerOptions" : [
            { "answerText" : "στην καλύτερη (πιο γρήγορη) περίπτωση", "isCorrect" :false},
            { "answerText" : "στη χειρότερη (πιο αργή) περίπτωση", "isCorrect" : true},
            { "answerText" : "στη μέση περίπτωση", "isCorrect" : false},
            { "answerText" : "σε κάθε περίπτωση", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Μια συνάρτηση παίρνει έναν αριθμό n και επιστρέφει πόσα bit είναι 1. Πόσο γρήγορη μπορώ να κάνω αυτή τη συνάρτηση;",
        "answerOptions" : [
            { "answerText" : "O(n^3)", "isCorrect" :false},
            { "answerText" : "O(n^2)", "isCorrect" : false},
            { "answerText" : "O(n)", "isCorrect" : false},
            { "answerText" : "O(sqrt(n))", "isCorrect" : false},
            { "answerText" : "O(log(n))", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Η παρακάτω συνάρτηση πολλαπλασιάζει 2 πίνακες m1 και m2 διαστάσεων Ν x Ν. Η χρονική πολυπλοκότητα του αλγορίθμου είναι:",
        "questionImage": "image16",
        "answerOptions" : [
            { "answerText" : "O(n^2)", "isCorrect" :false},
            { "answerText" : "O(n!)", "isCorrect" : false},
            { "answerText" : "O(n)", "isCorrect" : false},
            { "answerText" : "O(τρέχα γύρευε))", "isCorrect" : false},
            { "answerText" : "O(log(n)", "isCorrect" : false},
            { "answerText" : "O(n^3)", "isCorrect" :true}
        ] 
    },
    {
        "questionText" : "Ο υπολογισμός αθροίσματος τέλειων τετραγώνων έχει χωρική πολυπλοκότητα:",
        "questionImage": "image17",
        "answerOptions" : [
            { "answerText" : "O(n)", "isCorrect" :false},
            { "answerText" : "O(n^2)", "isCorrect" : false},
            { "answerText" : "O(1)", "isCorrect" : true},
            { "answerText" : "O(sqrt(n))", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Η χωρική πολυπλοκότητα του παρακάτω αναδρομικού αλγορίθμου είναι:",
        "questionImage": "image18",
        "answerOptions" : [
            { "answerText" : "O(n)", "isCorrect" :false},
            { "answerText" : "O(n^2)", "isCorrect" : false},
            { "answerText" : "O(log(n))", "isCorrect" : true},
            { "answerText" : "O(sqrt(n))", "isCorrect" : false}
        ] 
    }
], [
    {
        "questionText" : "Υπάρχουν μόνο 2 είδη εμβέλειας μεταβλητών: τοπικές και παγκόσμιες.",
         "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : true},
            { "answerText" : "Λάθος", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Οι μεταβλητές παγκόσμιας εμβέλειας (global scope) δηλώνονται:",
        "answerOptions" : [
            { "answerText" : "Μέσα στη συνάρτηση main", "isCorrect" :false},
            { "answerText" : "Έξω από οποιαδήποτε συνάρτηση", "isCorrect" : true},
            { "answerText" : "Μέσα σε οποιοδήποτε συνάρτηση", "isCorrect" : false},
            { "answerText" : "Δεν υπάρχουν μεταβλητές παγκόσμιας εμβέλειας", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Η εντολή char str[] = \"hello\" αποθηκεύει τον πίνακα str",
        "answerOptions" : [
            { "answerText" : "Στη στοίβα", "isCorrect" :false},
            { "answerText" : "Στο σωρό", "isCorrect" : false},
            { "answerText" : "Στη στατική μνήμη", "isCorrect" : false},
            { "answerText" : "Στη στοίβα ή στη στατική μνήμη ανάλογα με το σημείο δήλωσης", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Πού αποθηκεύονται οι τοπικές μεταβλητές μίας συνάρτησης;",
        "answerOptions" : [
            { "answerText" : "Στη στοίβα", "isCorrect" :false},
            { "answerText" : "Στο σωρό", "isCorrect" : false},
            { "answerText" : "Στη στατική μνήμη", "isCorrect" : false},
            { "answerText" : "Στη στοίβα ή στη στατική μνήμη ανάλογα με το αν δηλώθηκε static", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "char *s1 = \"World \", s2[] = \"Hello\"; strcpy(s2, s1); printf(\"%s\n\", s2); - Τι θα τυπώσει;" ,
        "answerOptions" : [
            { "answerText" : "Hello", "isCorrect" :false},
            { "answerText" : "World", "isCorrect" : true},
            { "answerText" : "HelloWorld", "isCorrect" : false},
            { "answerText" : "Θα κρασάρει", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "Ποια η τιμή της έκφρασης strcmp(\"Hodor\", \"Hodor\");" ,
        "answerOptions" : [
            { "answerText" : "0", "isCorrect" :true},
            { "answerText" : "1", "isCorrect" : false},
            { "answerText" : "42", "isCorrect" : false},
            { "answerText" : "Hodor", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "char str[100]; strpcy(str, \"Hi\"); strcat(str, \"How\");strcat(str, \"are you doing\");printf(\"%s\", str) - Τι θα τυπώσει;" ,
        "answerOptions" : [
            { "answerText" : "Hi", "isCorrect" :false},
            { "answerText" : "How are you doing", "isCorrect" : false},
            { "answerText" : "HiHow are you doing", "isCorrect" : true},
            { "answerText" : "Θα κρασάρει", "isCorrect" : false}
        ] 
    },
    {
        "questionText" : "char fruit[10]; strpcy(str, \"banana\"); strcat(fruit, fruit);strcat(fruit, fruit);printf(\"%s\", fruit) - Τι θα τυπώσει;" ,
        "answerOptions" : [
            { "answerText" : "banana", "isCorrect" :false},
            { "answerText" : "bananabanana", "isCorrect" : false},
            { "answerText" : "bananabananabananabanana", "isCorrect" : false},
            { "answerText" : "Πιθανόν θα κρασάρει", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Ο ακόλουθος κώδικας είναι σωστός.",
        "questionImage" : "image19",
         "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Ο ακόλουθος κώδικας είναι σωστός.",
        "questionImage" : "image20",
         "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Τι θα τυπώσει το ακόλουθο πρόγραμμα;",
        "questionImage" : "image21",
         "answerOptions" : [],
         "typeQuestion" : "4" 
    },
    {
        "questionText" : "Η πολυπλοκότητα Ο(n) είναι πιο αργή από την O(n^2).",
         "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Ποια από τις παρακάτω πολυπλοκότητες είναι η πιο αργή;",
        "answerOptions" : [
            { "answerText" : "Ο(n)", "isCorrect" :false},
            { "answerText" : "O(2^n)", "isCorrect" : true},
            { "answerText" : "O(1)", "isCorrect" : false},
            { "answerText" : "O(log(n))", "isCorrect" : false}
        ]
    },
    {
        "questionText" : "Ποια από τις παρακάτω πολυπλοκότητες είναι η πιο γρήγορη;",
        "answerOptions" : [
            { "answerText" : "Ο(n)", "isCorrect" :false},
            { "answerText" : "O(2^n)", "isCorrect" : false},
            { "answerText" : "O(1)", "isCorrect" : true},
            { "answerText" : "O(log(n))", "isCorrect" : false}
        ]
    }
], [
    {
        "questionText" : "Πώς διαβάζω έναν ακέραιο με την scanf;",
        "answerOptions" : [
            { "answerText" : "scanf(\"%d\", number)", "isCorrect" :false},
            { "answerText" : "scanf(\"d%\", number)", "isCorrect" : false},
            { "answerText" : "scanf(\"%d\", &number)", "isCorrect" : true},
            { "answerText" : "scanf(\"&d\", %number)", "isCorrect" : false}
        ]
    },
    {
        "questionText" : "Η συνάρτηση fopen μόλις απέτυχε να ανοίξει ένα αρχείο - επιστρέφει:",
        "answerOptions" : [
            { "answerText" : "1", "isCorrect" :false},
            { "answerText" : "-1", "isCorrect" : false},
            { "answerText" : "NULL", "isCorrect" : true},
            { "answerText" : "Τίποτα, απλά κρασάρει", "isCorrect" : false}
        ]
    },
    {
        "questionText" : "Είναι σωστό το ακόλουθο πρόγραμμα;",
        "questionImage" : "image22",
         "answerOptions" : [
            { "answerText" : "Ναι", "isCorrect" : false},
            { "answerText" : "Όχι", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "Ποια τα περιεχόμενα του αρχείου foo.txt μετά την εκτέλεση του παρακάτω; (υποθέτω ότι η fopen επιτυγχάνει)",
        "questionImage" : "image23",
        "answerOptions" : [
            { "answerText" : "Hello", "isCorrect" :false},
            { "answerText" : "Hello World", "isCorrect" : false},
            { "answerText" : "Ό,τι είχε πριν τρέξω το πρόγραμμα", "isCorrect" : true},
            { "answerText" : "foo.txt", "isCorrect" : false}
        ]
    },
    {
        "questionText" : "Ο παρακάτω κώδικας είναι σε Javascript, μία γλώσσα που δεν έχουμε ξαναδεί. Τι χρονική πολυπλοκότητα έχει ως προς το n;",
        "questionImage" : "image24",
        "answerOptions" : [
            { "answerText" : "Ο(n)", "isCorrect" :false},
            { "answerText" : "Ο(log(n))", "isCorrect" : false},
            { "answerText" : "O(n^2)", "isCorrect" : true},
            { "answerText" : "O(2^n)", "isCorrect" : false}
        ]
    },
    {
        "questionText" : "To foo.txt περιέχει τον αριθμό 42. Τι θα τυπώσει το ακόλουθο πρόγραμμα;",
        "questionImage" : "image25",
        "answerOptions" : [
            { "answerText" : "40", "isCorrect" :false},
            { "answerText" : "42", "isCorrect" : false},
            { "answerText" : "foo", "isCorrect" : false},
            { "answerText" : "Άγνωστο", "isCorrect" : true}
        ]
    },
    {
        "questionText" : "Είναι σωστό το ακόλουθο πρόγραμμα;",
        "questionImage" : "image26",
         "answerOptions" : [
            { "answerText" : "Ναι", "isCorrect" : false},
            { "answerText" : "Όχι", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "To stderror έχει συνήθως file descriptor με αριθμό:",
        "answerOptions" : [
            { "answerText" : "0", "isCorrect" :false},
            { "answerText" : "1", "isCorrect" : false},
            { "answerText" : "2", "isCorrect" : true},
            { "answerText" : "3", "isCorrect" : false}
        ]
    },
    {
        "questionText" : "Η πρότυπη είσοδος stdin και τα ανοιγμένα αρχεία στη C δεν έχουν καμία σχέση.",
         "answerOptions" : [
            { "answerText" : "Σωστό", "isCorrect" : false},
            { "answerText" : "Λάθος", "isCorrect" : true}
        ] 
    },
    {
        "questionText" : "To αρχείο input.txt περιέχει τα bytes 0xfe 0xca 0xef 0xbe - αν διαβάσουμε έναν int σε μορφή little endian θα πάρουμε:",
        "answerOptions" : [
            { "answerText" : "0xfecaefbe", "isCorrect" :false},
            { "answerText" : "0xefbefeca", "isCorrect" : false},
            { "answerText" : "0xbeefcafe", "isCorrect" : true},
            { "answerText" : "0xcafebeef", "isCorrect" : false}
        ]
    }
], [
    {
    "questionText" : "Έχει νόημα να τρέξω δυαδική αναζήτηση σε μη ταξινομημένο πίνακα.",
    "answerOptions" : [
       { "answerText" : "Σωστό", "isCorrect" : false},
       { "answerText" : "Λάθος", "isCorrect" : true}
   ] 
},
{
    "questionText" : "Ψάχνω να βρω ένα στοιχείο σε ένα πίνακα n θέσεων - χρησιμοποιώ:",
    "answerOptions" : [
        { "answerText" : "Γραμική αναζήτηση", "isCorrect" :true},
        { "answerText" : "Δυαδική αναζήτηση", "isCorrect" : false}
    ]
},
{
    "questionText" : "Αυτή η υλοποίηση της binary search είναι σωστή.",
    "questionImage" : "image27",
    "answerOptions" : [
        { "answerText" : "Σωστό", "isCorrect" :false},
        { "answerText" : "Λάθος", "isCorrect" : true}
    ]
},
{
    "questionText" : "Στη γλώσσα C η έκφραση 3^3 αποτιμάται ως:",
    "answerOptions" : [
        { "answerText" : "3", "isCorrect" :false},
        { "answerText" : "0", "isCorrect" : true},
        { "answerText" : "27", "isCorrect" : false},
        { "answerText" : "81", "isCorrect" : false}
    ]
},
{
    "questionText" : "Ποια μέθοδος ταξινόμησης είναι η πιο γρήγορη στην χειρότερη περίπτωση;",
    "answerOptions" : [
        { "answerText" : "insertion sort", "isCorrect" :false},
        { "answerText" : "selection sort", "isCorrect" : false},
        { "answerText" : "quicksort", "isCorrect" : false},
        { "answerText" : "bubblesort", "isCorrect" : false},
        {"answerText" : "Καμία, όλες είναι Ο(n^2)", "isCorrect" : true}
    ]
},
{
    "questionText" : "Η χρονική πολυπλοκότητaα στη μέση περίπτωση (average case) της quicksort είναι:",
    "answerOptions" : [
        { "answerText" : "Ο(n^2)", "isCorrect" :false},
        { "answerText" : "O(nlog(n))", "isCorrect" : true},
        { "answerText" : "O(n)", "isCorrect" : false},
        { "answerText" : "O(1)", "isCorrect" : false}
    ]
},
{
    "questionText" : "Ψάχνω αν η αριθμημένη θέση μου 3-13 υπάρχει (κάποιες λείπουν) στην αίθουσα προβολής N x N θέσεων - χρειάζομαι τόσα βήματα:",
    "answerOptions" : [
        { "answerText" : "Ο(n^2)", "isCorrect" :false},
        { "answerText" : "O(log(n))", "isCorrect" : true},
        { "answerText" : "O(2^n)", "isCorrect" : false},
        { "answerText" : "O - μετά τον κόβιντ δεν έχει βγει καμία ταινία της προκοπής", "isCorrect" : false}
    ]
},
{
    "questionText" : "Ποιος είναι χρονικά ο πιο αποδοτικός τρόπος να ταξινόμησεις 10^6 ακεραίους των 32 bit;",
    "answerOptions" : [
        { "answerText" : "bubblesort", "isCorrect" :false},
        { "answerText" : "insertion sort", "isCorrect" : false},
        { "answerText" : "merge sort", "isCorrect" : true},
        { "answerText" : "selection sort", "isCorrect" : false}
    ]
},
{
    "questionText" : "Αναζητώ έναν ακέραιο σε έναν ταξινομημένο πίνακα 10^15 ~ 2^50 στοιχείων - Με δυαδική αναζήτηση θα χρειαστώ τόσα βήματα:",
    "answerOptions" : [
        { "answerText" : "10^15", "isCorrect" :false},
        { "answerText" : "10^7.5", "isCorrect" : false},
        { "answerText" : "2^10", "isCorrect" : false},
        { "answerText" : "50", "isCorrect" : true}
    ]
},
{
    "questionText" : "Ποια είναι η χρονική πολυπλοκότητα της bubblesort;",
    "answerOptions" : [
        { "answerText" : "O(n)", "isCorrect" :false},
        { "answerText" : "O(n^2)", "isCorrect" : true},
        { "answerText" : "O(log(n))", "isCorrect" : false},
        { "answerText" : "O(log(n))", "isCorrect" : false}
    ]
},
{
    "questionText" : "Ποιος αλγόριθμος έχει αυτή τη δομή;",
    "questionImage" : "image28",
    "answerOptions" : [
        { "answerText" : "quicksort", "isCorrect" :false},
        { "answerText" : "merge sort", "isCorrect" : true},
        { "answerText" : "insertion sort", "isCorrect" : false},
        { "answerText" : "bubblesort", "isCorrect" : false}
    ]
}
], [], [
    {
        "questionText" : "Μπορώ να ορίσω δικούς μου τύπους στη C.",
        "answerOptions" : [
           { "answerText" : "Σωστό", "isCorrect" : true},
           { "answerText" : "Λάθος", "isCorrect" : false}
       ] 
    }, 
    {
        "questionText" : "Σε τι χρησιμοποιούμε το typedef στη C;",
        "answerOptions" : [
            { "answerText" : "Για να ορίσουμε συνώνυμα τύπων", "isCorrect" :true},
            { "answerText" : "Για να ορίσουμε μεταβλητές", "isCorrect" : false},
            { "answerText" : "Για να διαγράψουμε από τη μνήμη ένα struct", "isCorrect" : false},
            { "answerText" : "Για να γράψουμε λίγο παραπάνω κώδικα", "isCorrect" : false}
        ]
    },
    {
        "questionText" : "Έστω typedef double trouble[1024] και sizeof(double) = 8 - ποιο είναι το sizeof(trouble);",
        "answerOptions" : [
            { "answerText" : "1024", "isCorrect" :false},
            { "answerText" : "4096", "isCorrect" : false},
            { "answerText" : "8192", "isCorrect" : true},
            { "answerText" : "Εξαρτάται", "isCorrect" : false}
        ]
    },
    {
        "questionText" : "Έστω ότι οι int θέλουν 4 bytes για την αναπαράστασή τους. Για να δεσμεύσω μνήμη για έναν πίνακα 10000 int κάνω:",
        "answerOptions" : [
            { "answerText" : "int *array = malloc(10000)", "isCorrect" :false},
            { "answerText" : "int *array = malloc(4)", "isCorrect" : false},
            { "answerText" : "int *array = malloc(40000)", "isCorrect" : true},
            { "answerText" : "Εξαρτάται", "isCorrect" : false}
        ]
    },
    {
        "questionText" : "Ποιο είναι το μέγεθος του struct {char c; int x; double d};",
        "answerOptions" : [
            { "answerText" : "1 + 4 + 8 = 13", "isCorrect" :false},
            { "answerText" : "1 + 8 + 8 = 17", "isCorrect" : false},
            { "answerText" : "4 + 4 + 8 = 16", "isCorrect" : false},
            { "answerText" : "Εξαρτάται", "isCorrect" : true}
        ]
    },
    {
        "questionText" : "struct {int x; int y} point - ποια είναι η τιμή του point.y;",
        "answerOptions" : [
            { "answerText" : "0xFFFFFFFF", "isCorrect" :false},
            { "answerText" : "0", "isCorrect" : false},
            { "answerText" : "1", "isCorrect" : false},
            { "answerText" : "Ό,τι έτυχε να έχει η μνήμη σε εκείνη τη θέση", "isCorrect" : true}
        ]
    },
    {
        "questionText" : "struct {int x; int y} point; point = {42}; - ποια είναι η τιμή του point.y;",
        "answerOptions" : [
            { "answerText" : "42", "isCorrect" :false},
            { "answerText" : "0", "isCorrect" : true},
            { "answerText" : "1", "isCorrect" : false},
            { "answerText" : "Ό,τι έτυχε να έχει η μνήμη σε εκείνη τη θέση", "isCorrect" : false}
        ]
    },
    {
        "questionText" : "Έστω struct {int x} cafe = {1}, bar = {2}; - η παράσταση cafe == bar αποτιμάται σε:",
        "answerOptions" : [
            { "answerText" : "1", "isCorrect" :false},
            { "answerText" : "0", "isCorrect" : false},
            { "answerText" : "Δεν αποτιμάται", "isCorrect" : true},
            { "answerText" : "42", "isCorrect" : false}
        ]
    },
    {
        "questionText" : "Έστω struct {int x} cafe = {1}, bar = {2}; bar = cafe; - η παράσταση bar.x αποτιμάται σε:",
        "answerOptions" : [
            { "answerText" : "1", "isCorrect" :true},
            { "answerText" : "2", "isCorrect" : false},
            { "answerText" : "Δεν αποτιμάται", "isCorrect" : false},
            { "answerText" : "42", "isCorrect" : false}
        ]
    },
    {
        "questionText" : "Τι θα τυπώσει το ακόλουθο πρόγραμμα;",
        "questionImage" : "image29",
        "answerOptions" : [
            { "answerText" : "ManahManahManahManah", "isCorrect" :false},
            { "answerText" : "ManahManah", "isCorrect" : false},
            { "answerText" : "Manah", "isCorrect" : true},
            { "answerText" : "{τίποτα}", "isCorrect" : false}
        ]
    },
    {
        "questionText" : "Θέλω να ταξινομήσω σε αύξουσα σειρά βαθμολογίας το struct student[1024] - χρησιμοποιώ τη συνάρτηση σύγκρισης:",
        "answerOptions" : [
            { "answerText" : "int comp(...si, ...s2) return s1.grade - s2.grade", "isCorrect" :true},
            { "answerText" : "int comp(...si, ...s2) return s2.grade - s1.grade", "isCorrect" : false},
            { "answerText" : "int comp(...si, ...s2) return s1.grade == s2.grade", "isCorrect" : false},
            { "answerText" : "int comp(...si, ...s2) return s1.grade ^ s2.grade", "isCorrect" : false}
        ]
    }
]
]